@using Humanizer;


@model ReviewVm

<div class="reviews-module">
    <div class="rating-summary">
        @if (Model.ReviewsCount > 0)
        {
        <div class="row">
            <div class="col-md-5">
                <h5>Rating average</h5>
                <p class="rating-average">@(Math.Round(Model.RatingAverage, 1))/5</p>
                <p>(@Model.ReviewsCount reviews)</p>
            </div>
            <div class="col-md-7">
                <div class="rating-item">
                    <span>5 stars</span>
                    <div class="progress">
                        <div class="progress-bar bg-warning" role="progressbar" aria-valuenow="@Model.GetRatingPercent(Model.Rating5Count)" aria-valuemin="0" aria-valuemax="100" style="width: @Model.GetRatingPercent(Model.Rating5Count)%">
                        </div>
                    </div>
                    <span>@Model.Rating5Count</span>
                </div>
                <div class="rating-item">
                    <span>4 stars</span>
                    <div class="progress">
                        <div class="progress-bar bg-warning" role="progressbar" aria-valuenow="@Model.GetRatingPercent(Model.Rating4Count)" aria-valuemin="0" aria-valuemax="100" style="width: @Model.GetRatingPercent(Model.Rating4Count)%">
                        </div>
                    </div>
                    <span>@Model.Rating4Count</span>
                </div>
                <div class="rating-item">
                    <span>3 stars</span>
                    <div class="progress">
                        <div class="progress-bar bg-warning" role="progressbar" aria-valuenow="@Model.GetRatingPercent(Model.Rating3Count)" aria-valuemin="0" aria-valuemax="100" style="width: @Model.GetRatingPercent(Model.Rating3Count)%">
                        </div>
                    </div>
                    <span>@Model.Rating3Count</span>
                </div>
                <div class="rating-item">
                    <span>2 stars</span>
                    <div class="progress">
                        <div class="progress-bar bg-warning" role="progressbar" aria-valuenow="@Model.GetRatingPercent(Model.Rating2Count)" aria-valuemin="0" aria-valuemax="100" style="width: @Model.GetRatingPercent(Model.Rating2Count)%">
                        </div>
                    </div>
                    <span>@Model.Rating2Count</span>
                </div>
                <div class="rating-item">
                    <span>1 stars</span>
                    <div class="progress">
                        <div class="progress-bar bg-warning" role="progressbar" aria-valuenow="@Model.GetRatingPercent(Model.Rating1Count)" aria-valuemin="0" aria-valuemax="100" style="width: @Model.GetRatingPercent(Model.Rating1Count)%">
                        </div>
                    </div>
                    <span>@Model.Rating1Count</span>
                </div>
            </div>
        </div>
        }
    </div>
    <div id="addreview">
        @if (Model.HasBoughtProduct)
        {
        <partial name="_ReviewForm" model="new ReviewForm { EntityTypeId = Model.EntityTypeId, EntityId = Model.EntityId }" />
        }
        else
        {
            if (User.Identity.IsAuthenticated)
            {
                <p>Submiting review is only enabled for users who have bought this product.</p>
            }
            else
           {
                <p>
                    Please<a href="/login?ReturnUrl=@Context.Request.Path">login</a> or <a href="/register?ReturnUrl=@Context.Request.Path">register</a> to submit your review.
                    Please also note that submiting reviews is only enabled for users who have bought this product.
                </p>
            }
        }

    </div>
    <hr />
    <div id="reviews" class="review-item-list">
        @if (Model.ReviewsCount > 0)
        {
            foreach (var review in Model.Items.Data)
            {
        <div>
            <div>
                <div class="review-star badge">
                    <input type="hidden" value="@review.Rating" readonly="readonly" class="rating-loading" step="1" data-size="xs" data-show-clear="false" data-show-caption="false" />
                </div>
                <span class="review-title">@review.Title</span>
            </div>
            <div>@review.Comment</div>
            <div>
                By: <strong>@review.ReviewerName</strong> <span>@review.CreatedOn.Humanize()</span>  -
                <button class="btn-add-review-reply btn btn-link" data-toggle="collapse" data-target="#reviewReply@(review.Id)" aria-expanded="false" aria-controls="reviewReply@(review.Id)">Add Reply</button>
            </div>
            <div class="review-replies">
                @foreach (var reply in review.Replies)
                        {
                <div class="review-reply">
                    <div>@reply.Comment</div>
                    <div>By: <strong>@reply.ReplierName</strong> <span>@reply.CreatedOn.Humanize()</span></div>
                </div>
                        }
                <div>
                    <div class="add-review-reply mt-3 collapse" id="reviewReply@(review.Id)">
                        <partial name="_ReplyForm" model="new ReplyForm { ReviewId = review.Id }" />
                    </div>
                </div>
            </div>
        </div>
            }

        <a asp-controller="Review"
           asp-action="List"
           asp-route-entityId="@Model.EntityId"
           asp-route-entityTypeId="@Model.EntityTypeId"
           asp-route-pageNumber="1"
           asp-route-pageSize="25">@string.Format("View all {0} reviews", Model.ReviewsCount)</a>
        }
    </div>
</div>
