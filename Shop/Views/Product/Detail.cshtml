@model DetailsVm;
@{
    ViewData["Title"] = Model.product.Title;
}
@section head{
    <link href="~/css/single.css" rel="stylesheet" />
<style>
    .owl-nav {
        position: absolute;
        top: -50px;
        right: 0;
    }
    .owl-nav .owl-prev {
        margin-right: 5px;
        display: inline-block;
        padding: 2px 10px !important;
        background: #ddd !important;
    }
    .owl-nav>button {
        padding: 2px 10px !important;
    }
        .owl-nav .owl-next {
            display: inline-block;
            padding: 2px 10px !important;
            background: #ddd !important;
        }
   .optionactive {
        border: 3px solid #000 !important;
        opacity: 1 !important;
        }
 /*   .optionactive {
        background: #ffffff;
        opacity: 1 !important;
        border: 3px solid #000 !important;
    }*/
 
</style>
   
}

<div class="single">
    <div class="container">

        <div class="row">
            <div class="col-md-9">
                <div class="col-md-6 single-left gallery-lb">
                    @for (var i = 0; i < Model.product.Images.Count; i++)
                    {
                        <div class="mySlides" style="display: none;">
                            <div class="numbertext">@(i+1) / @Model.product.Images.Count</div>
                            <a class="zoom " href="https://localhost:5002/user-content/@Model.product.Images[i].Media.FileName" tabindex="0">
                                <i class="fal fa-expand"></i>
                            </a>
                            <img src="https://localhost:5002/user-content/@Model.product.Images[i].Media.FileName" style="width:100%">
                        </div>

                    }
                    <button class="img-prev" onclick="plusSlides(-1)"><i class="fal fa-angle-left" aria-hidden="true"></i></button>
                    <button class="img-next" onclick="plusSlides(1)"><i class="fal fa-angle-right" aria-hidden="true"></i></button>

                    <div class="image-slide">
                        @for (var i = 0; i < Model.product.Images.Count; i++)
                        {
                            <div class="column">
                                <img class="demo cursor" src="https://localhost:5002/user-content/@Model.product.Images[i].Media.FileName" style="width:100%" onclick="currentSlide(@i+1)" alt="@Model.product.Title">
                            </div>

                        }
                    </div>


                </div><!--Hình ảnh-->

                <div class="col-md-6 single-right pd-xs-0 product-details">
                    <div class=" product-details-item" data-id="@Model.product.Id">
                        <h1 class="single-title">@Model.product.Title</h1>
                        <p class="price">
                            @if (Model.product.Sale > 0)
                            {
                                <span>@Model.product.Sale.GetValueOrDefault(0).ToString("#,#.##") <small>₫</small> - </span>
                                <del class="sale">@Model.product.Price.GetValueOrDefault(0).ToString("#,#.##") <small>₫</small></del>
                            }
                            else
                            {
                                <span>
                                    @Model.product.Price.GetValueOrDefault(0).ToString("#,#.##") <small>₫</small>
                                </span>
                            }

                        </p>
                        @if (Model.product.Rating.Count > 0)
                        {
                            <div class="product-rating">
                                <span class="rating star-rating">
                                    @Model.product.Rating.Average(x => x.Scores)
                                </span>

                                <a href="#reviews" class="review-link" rel="nofollow">(<span class="count">@Model.product.Rating.Count</span> nhận xét)</a>
                            </div>
                            <div itemprop="description" class="short-description">
                                <p>@Model.product.Description</p>
                            </div>
                        }

                        @foreach (var item in Model.ProductOptionVm)
                        {
                            @if (item.Name == "Size")
                                    {
                                <div class="option">
                                    <div >
                                        Kích thước:
                                        <span></span>
                                    </div>
                                    <ul>
                                        @foreach (var item2 in item.Values)
                                        {
                                        <li>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="inlineRadioOptions-@item.Id" id="inlineRadio-@item2.Key" value="@item2.Key" >
                                                <label class="form-check-label" for="inlineRadio-@item2.Key" data-id="@item.Id">@item2.Display</label>
                                            </div>
                                        </li>
                                        }

                                    </ul>
                                </div>
                            }
                            else
                            {
                    <div class="option">
                        <div >
                            Màu Sắc:
                            <span></span>
                        </div>
                        <ul>
                            @foreach (var item2 in item.Values)
                            {
                                <li >
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="inlineRadioOptions-@item.Id" id="inlineRadio-@item2.Key" value="@item2.Key" >
                                        <label class="form-check-label" for="inlineRadio-@item2.Key" style="background-color:#@item2.Display;border-radius: 50%;" data-id="@item.Id"></label>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                            }
                        }


                        <!--Số lượng-->
                        <div class="quantity">
                            <div class="wrap-num-product">
                                <div class="btn-num-product-down">
                                    <i class="fal fa-minus" aria-hidden="true"></i>
                                </div>
                                <input class="txt-center num-product" type="number" name="num-product" value="1" data-val="1">

                                <div class="btn-num-product-up">
                                    <i class="fal fa-plus" aria-hidden="true"></i>
                                </div>
                            </div>
                        </div>

                        <!--Thêm giỏ hàng-->
                        <div style="display:flex; float:left; margin-top:10px ">
                            <div class="add-cart">
                                <a href="#" class="btn btn-black"> <span><i class="fal fa-shopping-basket" aria-hidden="true"></i></span>Thêm giỏ hàng</a>
                            </div>
                            <div class="checkout-cart">
                                <a href="#" class="btn btn-black"> <span><i class="fal fa-shopping-basket" aria-hidden="true"></i></span> Mua Ngay</a>
                            </div>
                        </div>

                        <div class="clearfix"></div>
                        <div class="add-wishlist">
                            <a href="#"> <span><i class="fal fa-heart" aria-hidden="true"></i></span>Thêm danh sách yêu thích</a>
                        </div>

                        <div class="clearfix"></div>
                        <div class="product-meta">
                            @if (Model.product.Brand != null)
                            {
                                <span class="product_brand">
                                    Thương hiệu:
                                    <a href="#">@Model.product.Brand.Name</a>
                                </span>
                            }
                            <span class="product_sku">
                                Xuất xứ:
                                <a href="#">N/A</a>
                            </span>
                            @if (Model.product.Category != null)
                            {
                                <span class="product_category">
                                    Danh mục:
                                    <a href="#">@Model.product.Category.Title</a>
                                </span>
                            }

                            <span class="product_share">
                                Chia sẻ:
                                <a href="#" class="share-facebook" style="color: #025aa5 !important"><i class="fa fa-facebook-official" aria-hidden="true"></i></a>
                            </span>
                        </div>
                        <div class="clearfix"></div>
                    </div>


                </div><!--Thông tin cơ bản-->
            </div>
            <div class="col-md-3">
                <div class="single-product-sidebar">
                    <span class="title">Có thể bạn thích</span>
                    <hr>
                    <ul class="owl-carousel owl-theme">
                        @for (int i = 0; i < Model.products.Count; i++)
                        {

                            <li class="slide item" data-slide-index="@i">
                                <div>
                                    <a href="/chi-tiet/@Model.products[i].Slug"><img src="https://localhost:5002/user-content/@Model.products[i].Thumbnail.FileName" style="width: 70px"></a>
                                </div>
                            
                                <div class="product-item-right">
                                    <p class="product-title">
                                        <a href="/chi-tiet/@Model.products[i].Slug" title="The Trend Polo">@Model.products[i].Title</a>
                                    </p>
                                    @if (Model.products[i].Sale > 0)
                                    {
                                        <p class="price"><span>@Model.products[i].Price.GetValueOrDefault(0).ToString("#,#.##") ₫</span> - <del class="sale">@Model.products[i].Sale.GetValueOrDefault(0).ToString("#,#.##")</del><small>₫</small> </p>
                                    }
                                    else
                                    {
                                                         
                                <p class="price"><span>@Model.products[i].Price.GetValueOrDefault(0).ToString("#,#.##")  <small>₫</small></span> </p>
                                      }
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <div class="Utilities-block">
                    <span class="title">Tiện ích</span>
                    <hr>
                    <table>
                        <tbody>
                            <tr>
                                <td class="size-45" style="font-size: 35px"><i class="fal fa-usd-circle" aria-hidden="true"></i></td>
                                <td>Tiết kiệm tiền cho những đơn hàng tiếp theo</td>
                            </tr>
                            <tr>
                                <td class="size-45" style="font-size: 35px"><i class="fal fa-truck" aria-hidden="true"></i></td>
                                <td>Giao hàng toàn quốc</td>
                            </tr>

                        </tbody>
                    </table>
                </div>
            </div>

            <div class="product-information col-md-12">
                <div class="div_link">
                    <ul class="nav">
                        <li><a href="#information" class="active" data-toggle="tab" role="tab">Thông tin thêm</a></li>
                        <li><a href="#reviews" data-toggle="tab" role="tab">Nhận xét</a></li>
                    </ul>
                </div>
                <div class="tab-content">
                    <div id="information" class="tab-pane fade in active show" role="tabpanel" style="min-height: 300px">
                        @Html.Raw(Model.product.Detail)
                    </div>
                    <div id="reviews" class="tab-pane fade in" role="tabpanel" style="min-height: 300px">
                        <div class="col-md-6 list-review">
                            <div class="row">
                               
                                <div>
                                    <h1 class="title">Đánh giá cho sản phẩm này</h1>
                                    <ul>
                                        @foreach (var rating in Model.product.Rating)
                                        {
                                            <li>
                                                <div class="review-avatar"><a href=""><img src="../img/user.png"></a></div>
                                                <div class="review-content">
                                                    <div class="me-information">
                                                        <span class="me-name">@rating.Name</span>
                                                        <span class="me-rating">
                                                            <span class="rating star-rating">@rating.Scores</span>
                                                        </span>
                                                        <div class="clearfix"></div>
                                                    </div>

                                                    <p>@rating.Content</p>
                                                    <time>@rating.CreatedOn.GetValueOrDefault(DateTime.Now).ToString("dd/MM/yyyy hh:mm")</time>
                                                </div>
                                                <div class="clearfix"></div>
                                            </li>

                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 add-review">
                            <div class="row">
                                <h1 class="title">Thêm đánh giá</h1>

                                <form id="main-review-form" class="contact-form" name="contact-form" asp-controller="Rating" asp-action="Add" method="post">
                                    <div class="review-rating">
                                        <label>Xếp hạng của bạn</label>
                                        <span class="wrap-rating fs-18 cl11 pointer">
                                            <i class="fa fa-star zmdi zmdi-star-outline" aria-hidden="true"></i>
                                            <i class="fa fa-star zmdi zmdi-star-outline" aria-hidden="true"></i>
                                            <i class="fa fa-star zmdi zmdi-star-outline" aria-hidden="true"></i>
                                            <i class="fa fa-star zmdi zmdi-star-outline" aria-hidden="true"></i>
                                            <i class="fa fa-star zmdi zmdi-star-outline" aria-hidden="true"></i>

                                            <input type="number" name="Scores" hidden>
                                        </span>
                                    </div>
                                    <input type="text" name="productId" value="@Model.product.Id" readonly hidden>
                                    <input type="text" name="name" required="required" placeholder="Tên *">

                                    <input type="email" name="email" required="required" placeholder="Email *">
                                    <textarea name="content" id="message" required="required" class="count-content" rows="3" placeholder="Nội dung *"></textarea>
                                    <span class="views-count"></span>

                                    <br>
                                    <p class="note">* trường dữ liệu bắt buộc</p>

                                    <button type="submit" name="submit" class="btn btn-black">Gửi đi</button>

                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>



</div>
@section Scripts{
    <script type="text/javascript" src="~/js/single.js"></script>
    <script>
        $(document).ready(function () {
            var el = $('.owl-carousel');
            var carousel;
            var carouselOptions = {
                margin: 20,
                nav: true,
                dots: true,
                slideBy: 'page',
                responsive: {
                    0: {
                        items: 1,
                        rows: 2 //custom option not used by Owl Carousel, but used by the algorithm below
                    },
                    768: {
                        items: 2,
                        rows: 3 //custom option not used by Owl Carousel, but used by the algorithm below
                    },
                    991: {
                        items: 1,
                        rows: 2 //custom option not used by Owl Carousel, but used by the algorithm below
                    }
                },
                navText: ['<i class="fal fa-angle-left" aria-hidden="true"></i>', '<i class="fal fa-angle-right" aria-hidden="true"></i>'] /// nút next,back
            };

            //Taken from Owl Carousel so we calculate width the same way
            var viewport = function () {
                var width;
                if (carouselOptions.responsiveBaseElement && carouselOptions.responsiveBaseElement !== window) {
                    width = $(carouselOptions.responsiveBaseElement).width();
                } else if (window.innerWidth) {
                    width = window.innerWidth;
                } else if (document.documentElement && document.documentElement.clientWidth) {
                    width = document.documentElement.clientWidth;
                } else {
                    console.warn('Can not detect viewport width.');
                }
                return width;
            };

            var severalRows = false;
            var orderedBreakpoints = [];
            for (var breakpoint in carouselOptions.responsive) {
                if (carouselOptions.responsive[breakpoint].rows > 1) {
                    severalRows = true;
                }
                orderedBreakpoints.push(parseInt(breakpoint));
            }

            //Custom logic is active if carousel is set up to have more than one row for some given window width
            if (severalRows) {
                orderedBreakpoints.sort(function (a, b) {
                    return b - a;
                });
                var slides = el.find('[data-slide-index]');
                var slidesNb = slides.length;
                if (slidesNb > 0) {
                    var rowsNb;
                    var previousRowsNb = undefined;
                    var colsNb;
                    var previousColsNb = undefined;

                    //Calculates number of rows and cols based on current window width
                    var updateRowsColsNb = function () {
                        var width = viewport();
                        for (var i = 0; i < orderedBreakpoints.length; i++) {
                            var breakpoint = orderedBreakpoints[i];
                            if (width >= breakpoint || i == (orderedBreakpoints.length - 1)) {
                                var breakpointSettings = carouselOptions.responsive['' + breakpoint];
                                rowsNb = breakpointSettings.rows;
                                colsNb = breakpointSettings.items;
                                break;
                            }
                        }
                    };

                    var updateCarousel = function () {
                        updateRowsColsNb();

                        //Carousel is recalculated if and only if a change in number of columns/rows is requested
                        if (rowsNb != previousRowsNb || colsNb != previousColsNb) {
                            var reInit = false;
                            if (carousel) {
                                //Destroy existing carousel if any, and set html markup back to its initial state
                                carousel.trigger('destroy.owl.carousel');
                                carousel = undefined;
                                slides = el.find('[data-slide-index]').detach().appendTo(el);
                                el.find('.fake-col-wrapper').remove();
                                reInit = true;
                            }


                            //This is the only real 'smart' part of the algorithm

                            //First calculate the number of needed columns for the whole carousel
                            var perPage = rowsNb * colsNb;
                            var pageIndex = Math.floor(slidesNb / perPage);
                            var fakeColsNb = pageIndex * colsNb + (slidesNb >= (pageIndex * perPage + colsNb) ? colsNb : (slidesNb % colsNb));

                            //Then populate with needed html markup
                            var count = 0;
                            for (var i = 0; i < fakeColsNb; i++) {
                                //For each column, create a new wrapper div
                                var fakeCol = $('<div class="fake-col-wrapper"></div>').appendTo(el);
                                for (var j = 0; j < rowsNb; j++) {
                                    //For each row in said column, calculate which slide should be present
                                    var index = Math.floor(count / perPage) * perPage + (i % colsNb) + j * colsNb;
                                    if (index < slidesNb) {
                                        //If said slide exists, move it under wrapper div
                                        slides.filter('[data-slide-index=' + index + ']').detach().appendTo(fakeCol);
                                    }
                                    count++;
                                }
                            }
                            //end of 'smart' part

                            previousRowsNb = rowsNb;
                            previousColsNb = colsNb;

                            if (reInit) {
                                //re-init carousel with new markup
                                carousel = el.owlCarousel(carouselOptions);
                            }
                        }
                    };

                    //Trigger possible update when window size changes
                    $(window).on('resize', updateCarousel);

                    //We need to execute the algorithm once before first init in any case
                    updateCarousel();
                }
            }
            carousel = el.owlCarousel(carouselOptions);

        });
        var optionvalue = @Html.Raw(Json.Serialize(Model.ProductOptionVm.ToList()));
        for (var i in optionvalue) {
            var item = optionvalue[i];
            $(`input[name="inlineRadioOptions-${item.id}"]`).on('click', function () {
                var id = $(this).next().attr("data-id");
                var value = $(this).val();
                $(`.form-check-label[data-id=${id}]`).removeClass('optionactive')
                $(this).prop('checked', $(this).is(':checked')).next().addClass("optionactive");
                $(this).parents(".option").find('span').text(value);
            });
        }
        //$('#getCheckboxesButton').live('click', function (event) {
        //    var checkboxValues = [];
        //    $('input[type="checkbox"]:checked').each(function (index, elem) {
        //        checkboxValues.push($(elem).val());
        //    });
        //    alert(checkboxValues.join(', '));
        //});
    $(document).ready(function () {
        $('.add-cart').on('click', function () {
        var cart = $('#cart');
        var imgtodrag = $(this).parents('.product-details').prev(".gallery-lb").find("img").eq(0);
        if (imgtodrag) {
        var imgclone = imgtodrag.clone()
        .offset({
            top: imgtodrag.offset().top,
            left: imgtodrag.offset().left
        })
        .css({
            'opacity': '0.5',
            'position': 'absolute',
            'height': '150px',
            'width': '150px',
            'z-index': '100'
        })
        .appendTo($('body'))
        .animate({
            'top': cart.offset().top + 10,
            'left': cart.offset().left + 10,
            'width': 50,
            'height': 50
        }, 1000, 'easeInOutExpo');

        setTimeout(function () {
            cart.effect("shake", {
            times: 2
        }, 200);
        }, 1500);

        imgclone.animate({
            'width': 0,
            'height': 0
        }, function () {
        $(this).detach()
        });
        setTimeout(function () { $('.cart-content').addClass('fadein') }, 2000);
        }

    });
    $(document).on('click', '.add-cart', function (event) {
    event.preventDefault();
        let parent = $(this).parents('.product-details');
        let productid = parseInt(parent.find('.product-details-item').attr('data-id'));
        let quantity = parseInt(parent.find('.num-product').val());
    $.ajax({
        type: 'POST',
        url: '@Url.ActionLink("AddToCart", "Cart")',
        data: {
            productid: productid,
            quantity: quantity
        },
        success: function (result) {
            addtocart();
        //window.location.href = '@Url.ActionLink("cart", "cart")';
        }
    })


    });
    $('.add-wishlist').on('click', function () {
             var wishlist = $('#wishlist-icon');
            var imgtodrag = $(this).parents('.product-details').prev(".gallery-lb").find("img").eq(0);
            if (imgtodrag) {
                var imgclone = imgtodrag.clone()
                    .offset({
                        top: imgtodrag.offset().top,
                        left: imgtodrag.offset().left
                    })
                    .css({
                        'opacity': '0.5',
                        'position': 'absolute',
                        'height': '150px',
                        'width': '150px',
                        'z-index': '100'
                    })
                    .appendTo($('body'))
                    .animate({
                        'top': wishlist.offset().top + 10,
                        'left': wishlist.offset().left + 10,
                        'width': 50,
                        'height': 50
                    }, 1000, 'easeInOutExpo');

                setTimeout(function () {
                    wishlist.effect("shake", {
                        times: 2
                    }, 200);
                }, 1500);

                imgclone.animate({
                    'width': 0,
                    'height': 0
                }, function () {
                    $(this).detach()
                });
                setTimeout(function () { $('.cart-content').addClass('fadein') }, 2000);
            }

    });
    $(document).on('click', '.add-wishlist', function (event) {
        event.preventDefault();
        let parent = $(this).parents('.product-details');
        let productid = parseInt(parent.find('.product-details-item').attr('data-id'));
            $.ajax({
            type: 'POST',
            url: '@Url.ActionLink("AddtoWishList", "Cart")',
            data: {
            productid: productid,
        },
        success: function (result) {
            addtowishlist();
        }
    })
    });
        });
  // Product Details Add and Remove

    </script>
}